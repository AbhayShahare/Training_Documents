#################
25th Sep. 2023
#################	
      KUBERNETES

			Sign_up			---> (Micro-service) Developer will make the code change --> test --> QA/UAT/ --> Released to Prod.	


			Service ==> 3 containers ==> 
			
			Kubernetes 
					Is the Container Orchestration Tool used to Orchestrate any type of Containers.
					  
			Micro-Service Based Appln. deployments using Containers :::::
			
			
			High Availability of Application :::
					Servers & Resources which are responsible to to run the applications should available.

			
			What are the factors that might impact the Production Deployments ???
			
				High Traffic 
				Resource Usage
				Network/connectivitity issues
				Server Availability
				
				Application 
				
				Mask all these impacts using Containers.
				
				3 replicas of my container. scale up the containers.
				
				
			Kubernetes 
					Is the Open-Source Container Orchestration Tool used to Orchestrate any type of Containers.
					It is used to ensure high availability of the applications running thru containers.
					Load-Balancing,Auto-Scaling,self-healing 
					
					Kubernetes Controller Objects - Used to ensure that the applications are running as per its desired state.
					
			Architecture of Kubernetes:
				Master & Workers Node Architecture
				
			Terminologies :
				Images 
				Containers 
				Container Registry 
				Repositories
				
				Kubernetes_Master		==> Is a controller Machine, shedules the deployments 
				Kubernetes_Cluster 		==> Is a collection of Kubernetes_Worknodes
				Kubernetes_Worknodes 	==> Are the nodes where the actual deployment happens.
				Kubeadm					==> Is the command line utility  used to initiate the Kubernetes Master & its resource.
				kubectl					==> It is a command line utility used to interact with Kubernetes master.
				
				PODs					==> Atomic Unit of Scheduling.
			
			Installation & Configuration of Kubernetes*********
			Architecture of Kubernetes*********************
			
			
			Kubernetes --> Is the Open-Source Container Orchestration Tool
			
			Managed Services ::
			
				AWS 		- ECS,ECR,EKS 
				AZURE 		- ACS,ACR,AKS 
				GCP 		- GCS,GCR,GKS
				

Architecture of Kubernetes
				
	Master Components :::::

	Below are the main components on the Kubernetes master node:

		etcd cluster – a simple, distributed key value storage which is used to store the Kubernetes cluster data (such as number of pods, their state, namespace, etc), API objects and service discovery details. It is only accessible from the API server for security reasons. 

		kube-apiserver – Kubernetes API server is the central management entity that receives all REST requests for modifications (to pods, services, replication sets/controllers and others), serving as frontend to the cluster. 
		Also, this is the only component that communicates with the etcd cluster, making sure data is stored in etcd and agrees with the service details of the deployed pods.

		kube-controller-manager – runs several distinct controller processes in the background (for example, replication controller controls number of replicas in a pod, endpoints controller populates endpoint objects like services and pods, and others) to regulate the shared state of the cluster and perform routine tasks. 

		cloud-controller-manager – is responsible for managing controller processes with dependencies on the underlying cloud provider (if applicable). For example, when a controller needs to check if a node was terminated or set up routes, load balancers or volumes in the cloud infrastructure, all that is handled by the cloud-controller-manager.

		kube-scheduler – helps schedule the pods (a co-located group of containers inside which our application processes are running) on the various nodes based on resource utilization. It reads the service’s operational requirements and schedules it on the best fit node. 


	Node (worker) components  :::::

	Below are the main components found on a (worker) node:

		kubelet – the main service on a node, regularly taking in new or modified pod specifications (primarily through the kube-apiserver) and ensuring that pods and their containers are healthy and running in the desired state. This component also reports to the master on the health of the host where it is running.

		kube-proxy – a proxy service that runs on each worker node to deal with individual host subnetting and expose services to the external world. It performs request forwarding to the correct pods/containers across the various isolated networks in a cluster.

				
				
				
			Kubectl get pods ::::
				used to get list of pods along with it status
				
			syntax: 
			
				kubectl <command> <Object_Type> <Object_Name> <parameters>
				
			
			Installation of Kubernetes
			Kubernetes Objects :
				PODS 
				Deployment Controller Object 
			Kubernetes Services
			Kubernetes Namespaces 
			
			
			Pod is a automic unit of scheduling :::
			
				state of pod :
				
						pending 
						running 
						failed 
						successful
#################
26th Sep. 2023
#################	

			Installation of Kubernetes
			Working with Kubernetes Objects :
				PODS 
				Deployment Controller Object 
			Kubernetes Services
			Kubernetes Namespaces 

			Installation and Configuration of Kubernetes Master & Kubernetes Worker Nodes :::
			
				- Minikube.
				
				Enterprise level :
				- Managed Services(EKS/AKS/GKS)
				
				- Open source kubernetes 
						Kubeadm 
						
							-> Pre-requisites :::
									
									Launch VMs - Host_Machines -- KM,(KWN1,2,3,...)
									
									3GB RAM 
									2 CPUs 
									
									All the Nodes should have full network assess. 
									There should not be any firewall restriction. 
									All the required ports should be enabled.
									
									
									
									To be install in all the nodes - Master & Workernodes.
										Setup Host_Machine Names -- KM,(KWN1,2,3,...)
										docker 
										ContainerD ==> CRI - Container Runtime Interface 
										kubeadm,kubectl,kubelet
									
									To be executed only in Master 
										kubeadm init to initialize Kubernetes master 
									
									To be executed only in WorkerNodes
										kubeadm join to join the workernodes kubernetes Master 
										
									
									
						deployment -> pod --> container --> application --> write 100 records to a database.
								completed around 30 records 
								
						Controller Manager 
						
						deployment -> new pod --> resume. 
		
			Working with Kubernetes Objects :
				PODS 
				Deployment Controller Object 

			Kubernetes Services :::
			
				NodePort Service ==> It is used to expose the pod to internet.		== Generate the NodePort.
				
				Using the External IP Address of the Node and the NodePort, we can access the application that is running inside the pod thru web browser.


Summary : 

			Installation of Kubernetes
			Working with Kubernetes Objects :
				PODS 

Next ::				
			Deployment Controller Object  high - availability of pods, autoscale, upgrade, rollback(undo) the changes  
				Kubernetes Services
				Kubernetes Namespaces 

#################
28th Sep. 2023
#################				

			Deployment Controller Object  high - availability of pods, autoscale, upgrade, rollback(undo) the changes  
				Kubernetes Services
				Kubernetes Namespaces 
				
				
			Deployment Controller object:
			
			pods --> 7

			Kubernetes_Master
				Kubernetes_Cluster
					Kubernetes_Worknode1
					Kubernetes_Worknode2
			
			Kubernetes_Master
				Kubernetes_Cluster1
					Kubernetes_Worknode1
					Kubernetes_Worknode2
					Kubernetes_Worknode3
					Kubernetes_Worknode4						
				Kubernetes_Cluster2
					Kubernetes_Worknode1
					Kubernetes_Worknode2
					Kubernetes_Worknode3
					Kubernetes_Worknode4			
				Kubernetes_Cluster3
					Kubernetes_Worknode1
					Kubernetes_Worknode2
					Kubernetes_Worknode3
					
			Kubernetes_Master	
				Kubernetes_Master1
					Kubernetes_Cluster1
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3
						Kubernetes_Worknode4						
					Kubernetes_Cluster2
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3
						Kubernetes_Worknode4			
					Kubernetes_Cluster3
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3			
				Kubernetes_Master2
					Kubernetes_Cluster1
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3
						Kubernetes_Worknode4						
					Kubernetes_Cluster2
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3
						Kubernetes_Worknode4			
					Kubernetes_Cluster3
						Kubernetes_Worknode1
						Kubernetes_Worknode2
						Kubernetes_Worknode3


			Deployment Controller object:::
			
				Pod :::
				
				Deployment ::: 
				
					mywebapp.war ==> myweappimg:v1.0	==> Published to Docker_hub.
					mywebapp.war ==> myweappimg:v1.1	==> Published to Docker_hub.
					mywebapp.war ==> myweappimg:v1.2	==> Published to Docker_hub.
					mywebapp.war ==> myweappimg:v1.3	==> Published to Docker_hub.
					mywebapp.war ==> myweappimg:v1.4	==> Published to Docker_hub.
					mywebapp.war ==> myweappimg:v1.5	==> Published to Docker_hub. pod is up an running
				
				Upgrade
				Revert/Undo the Change 
				Replicas of Pod 
					Auto-Scaling Capability of Kubernetes 
						Scale-Up
						Scale-Down
				

				StrategyType:           RollingUpdate ***Default Deployment Strategy
				
				Services :::
					ClusterIP 	(Default Service)
					NodePort 	- It is used to expose the pods to internet.
					Load Balancer
				
				
				1 copy of Pod --> 	nginx:1.7.9			===>> nginx:1.9.1
				
				3 copy of Pod --> 	nginx:1.7.9			===>> nginx:1.9.1
				1 of 3 ==> Upgraded first. If it is successful then only it will upgrade the remaining pods.
				
nginx-deploy-5bdd559bcc-7f6rv   1/1     Running   0          3m15s
nginx-deploy-5bdd559bcc-9pk2z   1/1     Running   0          3m15s
nginx-deploy-5bdd559bcc-wth8t   1/1     Running   0          3m15s


nginx-deploy-58cbc576c5-7mlks   1/1     Running   0          54s
nginx-deploy-58cbc576c5-g5h47   1/1     Running   0          44s
nginx-deploy-58cbc576c5-r64ql   1/1     Running   0          34s
				
			Kubernetes Services
				
				Services :::
					ClusterIP 	(Default Service)
					NodePort 	- It is used to expose the pods to internet.
					Load Balancer		

					
			Kubernetes Namespaces 			==> Logical Partitioning of the Cluster.
					Can be created based on the Application / Environments.

				kubectl get nodes  ==> 
				
			00:00  kubectl set image deploy nginx-deploy nginx-container=nginx:1.9.1
			10000 replicas 
   54  kubectl get nodes
   55  kubectl get pods --all-namespaces
   56  clear
   57  kubectl get pods
   58  vi nginx-pod.yaml
   59  kubectl create -f nginx-pod.yaml
   60  kubectl get pods
   61  kubectl get pods -o wide
   62  clear
   63  kubectl get pods -o yaml
   64  kubectl describe pod nginx-pod
   65  clear
   66  kubectl get pods -o yaml
   67  clear
   68  kubectl get pods -o wide
   69  ls
   70  kubectl exec -it nginx-pod -- /bin/sh
   71  kubectl get svc
   72  kubectl expose pod nginx-pod --type=NodePort --port=80
   73  kubectl get svc
   74  kubectl get pods -o wide
   75  clear
   76  kubectl get pods --all-namespaces
   77  clear
   78  kubectl get nodes
   79  kubectl get pods
   80  ls
   81  clear
   82  vi nginx-deploy.yaml
   83  clear
   84  ls
   85  kubectl get pos
   86  kubectl get pods
   87  clear
   88  kubectl get pods -o wide
   89  kubectl create -f nginx-deploy.yaml
   90  kubectl get pods -o wide
   91  kubectl get rc
   92  kubectl get rs
   93  kubectl get deploy -l app=nginx-app
   94  kubectl get rs -l app=nginx-app
   95  kubectl get po -l app=nginx-app
   96  kubectl describe deploy nginx-deploy
   97  kubectl set image deploy nginx-deploy nginx-container=nginx:1.91 --record
   98  kubectl describe deploy nginx-deploy
   99  kubectl rollout status deployment/nginx-deploy
  100  kubectl rollout history deployment/nginx-deploy
  101  kubectl get po -l app=nginx-app
  102  kubectl rollout undo deployment/nginx-deploy
  103  kubectl rollout status deployment/nginx-deploy
  104  kubectl get po -l app=nginx-app
  105  kubectl describe deploy nginx-deploy
  106  kubectl set image deploy nginx-deploy nginx-container=nginx:1.9.1
  107  kubectl rollout status deployment/nginx-deploy
  108  kubectl get po -l app=nginx-app
  109  kubectl describe deploy nginx-deploy
  110  kubectl get po -l app=nginx-app
  111  kubectl scale deployment nginx-deploy --replicas=8
  112  kubectl get po -l app=nginx-app
  113  kubectl scale deployment nginx-deploy --replicas=2
  114  kubectl get po -l app=nginx-app
  115  kubectl scale deployment nginx-deploy --replicas=8
  116  kubectl get po -l app=nginx-app -o wide
  117  kubectl get svc
  118  clear
  119  kubectl get ns
  120  kubectl get pods
  121  kubectl get pods -owide
  122  clear
  123  kubectl get pods --all-namespaces
  124  kubectl create ns DEV
  125  kubectl create ns dev
  126  clear
  127  kubectl get ns
  128  kubectl create ns qa
  129  kubectl create ns uat
  130  kubectl get ns
  131  ls
  132  cp nginx-pod.yaml nginx-pod1.yaml
  133  ls
  134  vi nginx-pod1.yaml
  135  ls
  136  kubectl create -f nginx-pod1.yaml
  137  clear
  138  kubectl get pods
  139  kubectl get pods --all-namespaces
  140  clear
  141  history
			
Kubernetes :::	
		What is Container Orchestration 
		Type of Container Orchestration Tools
		Kubernetes 
		Kubernetes Architecture 
		Create Pod 
		Deployments***
		Namespaces 
		Services - NodePort Service.
		
		
			
			

			
