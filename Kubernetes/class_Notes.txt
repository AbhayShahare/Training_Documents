#################
25th Sep. 2023
#################	
      KUBERNETES

			Sign_up			---> (Micro-service) Developer will make the code change --> test --> QA/UAT/ --> Released to Prod.	


			Service ==> 3 containers ==> 
			
			Kubernetes 
					Is the Container Orchestration Tool used to Orchestrate any type of Containers.
					  
			Micro-Service Based Appln. deployments using Containers :::::
			
			
			High Availability of Application :::
					Servers & Resources which are responsible to to run the applications should available.

			
			What are the factors that might impact the Production Deployments ???
			
				High Traffic 
				Resource Usage
				Network/connectivitity issues
				Server Availability
				
				Application 
				
				Mask all these impacts using Containers.
				
				3 replicas of my container. scale up the containers.
				
				
			Kubernetes 
					Is the Open-Source Container Orchestration Tool used to Orchestrate any type of Containers.
					It is used to ensure high availability of the applications running thru containers.
					Load-Balancing,Auto-Scaling,self-healing 
					
					Kubernetes Controller Objects - Used to ensure that the applications are running as per its desired state.
					
			Architecture of Kubernetes:
				Master & Workers Node Architecture
				
			Terminologies :
				Images 
				Containers 
				Container Registry 
				Repositories
				
				Kubernetes_Master		==> Is a controller Machine, shedules the deployments 
				Kubernetes_Cluster 		==> Is a collection of Kubernetes_Worknodes
				Kubernetes_Worknodes 	==> Are the nodes where the actual deployment happens.
				Kubeadm					==> Is the command line utility  used to initiate the Kubernetes Master & its resource.
				kubectl					==> It is a command line utility used to interact with Kubernetes master.
				
				PODs					==> Atomic Unit of Scheduling.
			
			Installation & Configuration of Kubernetes*********
			Architecture of Kubernetes*********************
			
			
			Kubernetes --> Is the Open-Source Container Orchestration Tool
			
			Managed Services ::
			
				AWS 		- ECS,ECR,EKS 
				AZURE 		- ACS,ACR,AKS 
				GCP 		- GCS,GCR,GKS
				

Architecture of Kubernetes
				
	Master Components :::::

	Below are the main components on the Kubernetes master node:

		etcd cluster – a simple, distributed key value storage which is used to store the Kubernetes cluster data (such as number of pods, their state, namespace, etc), API objects and service discovery details. It is only accessible from the API server for security reasons. 

		kube-apiserver – Kubernetes API server is the central management entity that receives all REST requests for modifications (to pods, services, replication sets/controllers and others), serving as frontend to the cluster. 
		Also, this is the only component that communicates with the etcd cluster, making sure data is stored in etcd and agrees with the service details of the deployed pods.

		kube-controller-manager – runs several distinct controller processes in the background (for example, replication controller controls number of replicas in a pod, endpoints controller populates endpoint objects like services and pods, and others) to regulate the shared state of the cluster and perform routine tasks. 

		cloud-controller-manager – is responsible for managing controller processes with dependencies on the underlying cloud provider (if applicable). For example, when a controller needs to check if a node was terminated or set up routes, load balancers or volumes in the cloud infrastructure, all that is handled by the cloud-controller-manager.

		kube-scheduler – helps schedule the pods (a co-located group of containers inside which our application processes are running) on the various nodes based on resource utilization. It reads the service’s operational requirements and schedules it on the best fit node. 


	Node (worker) components  :::::

	Below are the main components found on a (worker) node:

		kubelet – the main service on a node, regularly taking in new or modified pod specifications (primarily through the kube-apiserver) and ensuring that pods and their containers are healthy and running in the desired state. This component also reports to the master on the health of the host where it is running.

		kube-proxy – a proxy service that runs on each worker node to deal with individual host subnetting and expose services to the external world. It performs request forwarding to the correct pods/containers across the various isolated networks in a cluster.

				
				
				
			Kubectl get pods ::::
				used to get list of pods along with it status
				
			syntax: 
			
				kubectl <command> <Object_Type> <Object_Name> <parameters>
				
			
			Installation of Kubernetes
			Kubernetes Objects :
				PODS 
				Deployment Controller Object 
			Kubernetes Services
			Kubernetes Namespaces 
			
			
			Pod is a automic unit of scheduling :::
			
				state of pod :
				
						pending 
						running 
						failed 
						successful
