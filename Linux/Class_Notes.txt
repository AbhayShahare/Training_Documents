DevOps Training :
Start Date : 24th July 2023

#######################
Day 1 - 25th July 2023 
#######################

	Module - 1 :	Intro. to DevOps.
	
	Software --> What it is ?
			- Any Computer Application/Programs 
			
	
	How Software is Developed?
	What are the various process involved in Software Developement?
	What is the Software Development LifeCycle ?
	
	Sofware :::
	
		- Application Software
			Banking/Healthcare/E-Commerce,.....
		- System Software 
			Operating System/Middleware products
			Micro-chip level programming/Embedded Application 
			
	Software Developement Life Cycle - (SDLC)
		
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring
		
	Application :::
	
		Desktop Application 
		Web Application 
		Mobile Application 
		
		
	Software Developement Life Cycle - (SDLC)
		
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring	
		
		
	Waterfall Model ::: Is a Traditional/Legacy SDLC Process/Model 
						It is Linear in fashion --> Means the process is in sequential.
		
	
E_Commerce Application -> 

		6 Months, 10+2 Modules/Function, tools, supportive components 

		
	Waterfall::
	
	Core_Project1:
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring
	
		
	Enhancement_Project1:
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring	
		
	
	Agile Methodology :::::		The entire project is splitted into various Modules/Iterations in Agile.

E_Commerce Application -> 

		6 Months, 10+2 Modules/Function, tools, supportive components 	
		
		
	Module/Iteration1:	
	
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring	

	Module/Iteration2:	
	
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring

	Module/Iteration3:	
	
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring


	Module/Iteration-n:	
	
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring
		
	Agile Methodology can be used to achieve :
		Continuous Development 
		Continuous Integration
		Continuous Delivery 		--> Requires Manual Approval for Prod release.
		
		Continuous Deployment 		--> Doesnt require any manual intervention/Approval for prod release.
		
	We cannot Achieve Continuous Deployment using Agile.
	
	
	DevOps ::::
	
		DevOps is a Software Development Strategy/Process, which helps to promote collaboration with the teams like Development Team and Operations Team to achieve Continuous Developement, Continuous Integration, Continuous Testing, Continuous Delivery, Continuous Deployment and Continuous Monitoring, in an automated fashion.	
	
		- Requirement Analysis
		- Design Phase 
		- Coding/Implementation
		- Testing 
		- Deployment
		- Maintenance/Monitoring
		
	Terminologies :::
	
		Teams Involved in the SDLC process ?
		
			IT - is responsible:
		
					- Infra-Structure Provision Team 
					- Application Development Team - Application Owners/Architects/Leads/Developer
					- Testing Team - UT/QA/UAT/..... 
					- Release Management Team - For timely prod release
					- Production Support Team 
					- Production Monitoring Team
						Infra-Structure/Application
					- Security Team
				
			Why DevOps:::: ????	
				
			Tele-comm Domain - Service Providers1 ==> Introduce a New Offer/Service to their customers 
			Tele-comm Domain - Service Providers2 ==> 

		Environments:::
		
			Developer 	--> to do development I need Developement Environments
			Tester 		--> Test Environments
			Release		--> Production Environments
			
			Non-Prod Environments									Production Environment
			
				Dev - code - build - unit testing 
				Test 
					QA 
					UAT 						======>					Prod_Environment
		
		What is the role of DevOps Team ??? where they fit in  SDLC Process ??
		
				DevOps Team:
					- Infra-Structure Provision Team 
					- Application Development Team - Application Owners/Architects/Leads/Developer
					- Testing Team - UT/QA/UAT/..... 
					- Release Management Team - For timely prod release
					- Production Support Team 
					- Production Monitoring Team
						Infra-Structure/Application
					- Security Team	

			DevOps is all about People, Process and Tools
		
		DevOps Team:
				DevOps Associate
				Sr. DevOps Associate
				DevOps Engineers
				DevOps Lead 
				Sr. DevOps Lead 
				DevOps Architects
				DevOps Consultants 
				SRE 
		
		
		
		DevOps Need - Scripting Knowledge. 
						Python, Shell, Groovy, Yaml 
						
					- Should know how the Applications are Developed, Built, Tested & Deployed.
		
Next :		
		DevOps Stages ::::

#######################
Day 2 - 27th July 2023 
#######################		

			DevOps is a Software Development Strategy/Process, which helps to promote collaboration with the teams like Development Team and Operations Team and automate the end-to-end Software development process.
		
			
			
			Infra-Structure Provision & Configuration :::: 
					Infra-Structure As Code - IAC Tools 	Jenkins ---> 
							Terraform		==> Provision/Create the virtual Machines/servers
							Ansible 		==> Configuration Management ==> Install/Remove/Upgrade any tools 
							
							
							
							
			Continuous Development
			
			Sofware Development :::
			
				Developers --> Coding --> Java/C#/Python/Angular/NodeJS		==> Used to Develop Business Logics.
							Eg.: www.amazon.com - E_Commerce 
						Coding	- Sign_Up_Module --> *.java (High Level Language) 
								IDEs -- Integrated Development Environment -- Eclipse - Visual Studio Code, Visual Studio, Pycharm, Intellj
								Code the application and save it in a source code repository(GIT) Jenkins
								
						Application build 	--> It is a process of compiling the source code and creating artifacts(Binaries - *.war/*.jar/*.exec)
										Build Tools ---> Maven/Gradle/Ant --> Jenkins
						Perform Unit Testing  --> Automate Unit Testing (Using Maven Integration) Jenkins 
						Promote the application for further testing (QA/UAT-Envi.) - Jenkins
						Notify the Testing Team thru email.  Jenkins(Build Orchestration Tool)
						
			
			
			Continuous Integration :::	It is a capability of developers to continuously integrate the code for further testing.
						Promote the application for further testing (QA/UAT-Envi.) - Jenkins
									QA  -  Quality Assurance Testing
									UAT -  User Acceptance Testing
						Notify the Testing Team thru email.  Jenkins(Build Orchestration Tool)
					
					signin.java ==> 2500 lines of codes
						10 lines of changes 
			
			Continuous Testing
						QA  -  Quality Assurance Testing  --> TestNG/Selenium --> Jenkins 
			
			Continuous Delivery/ Deployment 
				==>  It is just a process of copying the application artifacts from lower environment to higher environment
								
				--> These are refered to Production Release.
				Continuous Delivery		===> It requires Manual approval for Prod. release
				
				Continuous Deployment	===> It is completely automated - No Approvals are needed to perform the prod release.
				
						Ansible/Jenkins/Docker/Kubernetes

			Non-Prod Environments									Production Environment
			
				Dev - code - build - unit testing 
				Test 
					QA 
					UAT 						======>					Prod_Environment
					
					
			Deployment Window :::: 
			
			Continuous Delivery :::
				Online Banking!!!! Prod Deployment Window --> 4 to 6 Hrs.
						If deployment is successful 
						If it failed????
							Try to fix the issue within the deployment window 
							If it is not possible to fix, then the changes will be reverted.
							
			Continuous Deployment :::
			
				Starting from Application Build, UT, Code promotion, QA, UAT, Prod Release ==> is completely Automated.
			amazon.com
			netflix 
			
			Continuous Monitoring
					
					-> Infra-Structure Monitoring - Jenkins
								Prometheus/Grafana/					
							
					-> Application Monitoring
								AppDynamics
			

			
			Software Application ::
			
				Mobile/Web/Desktop Applications
				
			Legacy applications architecture : 
					
					Monolith Application Architecture  :::
						
							The Application Components are tightly coupled.
							
					Micro-Service Based Application Architecture :::
					
							The Application is splitted into various services.
							It is loosely coupled.
							
			
			
			www.amazon.com - E_Commerce  ::::

			Developers's Perspective ::::
			
						sign_up ==> --> 3 - tier Architecture
										FrontEnd,Application_Logic,BackEnd(Database) SQL/ORACLE
						
			
			Sign_up			---> (Micro-service) Developer will make the code change --> test --> QA/UAT/ --> Released to Prod.
			Sign_In 
			Search
			Add to cart
			place an order
			payment
			Confirm Order
			Tracking 				
			
			mywebapp.html
				<html>
				
					sign_up
					sign_in
					payment
				
				</html>
				
			sign_up.html 			
				<html>				
					sign_up				
				</html>
				
			sign_in.html 			
				<html>				
					sign_in				
				</html>



Lab Prerequisites:::

		1. Create Github account
		2. Create AWS Free Tier Account
		3. Install: 
				Java
				GIT
				Python
				Eclipse IDEs
				Visual Studio Code
				Terraform
		4.Create Dockerhub account


#######################
Day 3 - 28th July 2023 
#######################			
		
		https://github.com/
		
		What is github ????  --> is remote git repository ( Folders & Files )
		
		
		Fundamentals of AWS ::::
		
		Environments ????		Infra-Structure / Computing Devices / Servers / Virtual Machines.
		
			Non-Prod Environments(Business Hours)					Production Environment (24/7)
			
				Dev - code - build - unit testing 
				Test 
					QA 
					UAT 						======>					Prod_Environment
					
					
		Cloud Platform :::
				Fundamentals of Cloud Computing! 
				
				
		On-Premises ==> My own Infra-Structure.
		
		
		Create AWS Free Tier Account :::
		
			Unique Email ID 
			Phone Number
			Credit/Debit Card -- > eligible for International Tracking. 
				
				
#######################
31st July 2023
#######################		

		Cloud Computing Fundamentals ::::
		
			Benefits of Cloud computing
			Various Cloud Services 
				IAAS
				PAAS
				SAAS
				
				
		Cloud platform ---> Meant for my business 
							Mail_Server 
							Application_Server
		Deployment Model ::
		
			Public Cloud 
			
			Private Cloud
			
			Hybrid Cloud 
			
			Community Cloud
			
			ALM --> Application LifeCycle Management Tool
				Azure Board 
				Jira 
				
		Working with AWS Platform ?
		
			1. Create a free tier !
			2. Login to this AWS Console as a root user.
			3. Access AWS Console.
		
		
		
		Cloud Platform!
		
			- Cloud Resources 
				Compute Device -- Servers 
						The AWS Servers are located in different geographical locations!
								Regions
									Availability Zones
										Data centers
											Collection Servers 
													Virtual Machines (EC2 Instances)
			
			
		Tools :::::::
		
			Self-Managed Services/Tools	(Open-Source Tools)
			
				git/jenkins/docker/K8s/Ansible/Terraform/Prometheus/Grafana/Maven 
			
			
			
			Managed Services/Tools --> Managed by Service Providers
				
				Azure DevOps Service :
					Az Boards/Repos/Artifacts/Test/Pipelines
				AWS :
					Code Commit/Code Build/Code Pipeline/Code Deploy
					
					
		In AWS --> You have create EC2 Instances (VM)
			750 Hrs/Month --> 
			
			1 VM ==> run for 750 Hrs/Month 
			10 VM ==> 75 Hrs
			
		Create EC2 Instance ::::
		
Summary :::
		Launch AWS EC2 Instance!
		
		
################
1st August 2023
################	

		Working with AWS Services :::
		
		
		EC2 Instances			===> Is a Virtual Machine!
		
			- Created a Linux Machine :: 
				Linux is an Operating System - Open Source OS
						Debain - Ubuntu 
						Package Manager!
			
			- Connect to the EC2 Instance : Remote Server / VM 
				- EC2 Instance Connect -- done thru browser 
				- SSH Agents 
					- Putty
					- MobaXterm
				- Terminals/Console/Command Prompt
				
				
		EC2 Instance == > Virtual Machine 
			IP Address ==> 
				Public IP Address  --> This will change whenever the VM is restarted.
				Private IP Address --> This is constant.
				
				
		Using Public_IP_Address & Key pair we can establish connect to the remote server.
		
		
			Amazon Linux - AMI 
				The default user_ID - ec2-user 
				
			Ubuntu - AMI 
				The default user_ID - ubuntu
		
		
			- SSH Agents 		==> Is used to establish secure connection to the remote Linux servers
				- MobaXterm
					- Install Mobaxterm in your local Windows Machine.
								https://mobaxterm.mobatek.net/download.html
			

			
################
3rd August 2023
################	


		How to install software packages in Linux Machines - VM in AWS 
		AWS Services - Security Group,IAM,ECR,ECS,EKS,S3,EBS,....... 
		
		
		Virtual Machines :::
		
			EC2 Instance:::
			
				- Ubuntu 
					Package Management! - (Installation/Unstallation/Upgrade)
					
			Linux Distributions ::::
				Linux is a open source Unix based Operating System:
				Command Line Interface
				
				Distributions - the flavors of Linux OS 
				
					Fedora/RHEL/Centos/Ubuntu/
					
					Types of Package Managers ::::
						Fedora(latest version) 											-	dnf 
						AmazonLinux2(Previous Version)/Fedora(Old Version)/RHEL/Centos 	-	yum
						debian/Ubuntu													- 	apt / apt-get

					rpm
					tar
					curl
				Package Manager ==> Used to Manage the package - (Installation/Unstallation/Upgrade)	
		
		
		1. Launch AWS EC2 Instances !
			- Install the Package!
		
		
		Security groups --> Which is used to define the incoming/Inbound rules and Outgoing/Outbound rules traffic.
		
			Ubuntu Machine --> My WebApplication --> IP_Address:Port 
			
			Jenkins --> by default jenkins run in port 8080
			
		Linux Machine :::
			Linux Commands :::
			
				Always the package managers can be executed using root user access!
				
			git --> Source Code Management Tool
			
			ubuntu 
			
				sudo -i
				
				apt update -y
				apt install git -y
				apt remove git -y 
				
				git --version 
				
			AmazonLinux2 (previous version)
			
				sudo -i
				yum update -y
				yum install git -y
				yum remove git -y
		
			Security Group!
			
				port 22 -> 
				How to create new security Group based on Applications.
					Jenkins/Tomcat/Nginx 
			
			Next : Install 
				Jenkins/Ansible
				
################
4th August 2023
################					
				
				
			Install some tools and services :
			
				Package :
					GIT -- Tools - using git cli command, we access git.
					
					jenkins/tomcat/nginx --> Tool --> run as a service - It is accessible thru web browser
						It shd be enabled with its default port.
						Jenkins by default runs in port 8080
					
					Install Jenkins :::		https://www.jenkins.io/doc/book/installing/
						Jenkins is one of the build Orchestration Tool. 
						Jenkins is a Master/Slave Architecture. 
						
					Installation of any tool :::
					
						1. Install Pre-requisites
						2. Install the actual tool
						3. Config the tool - post installation activities
						
Summary ::

Launch Ubuntu Machine - 20.04

Add Inbound rule in security Group.
	8080
	All Traffic ==> 

Install Java :

sudo apt update
sudo apt install openjdk-17-jre
java -version

Install Jenkins :
					
				
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
  
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
  
sudo apt-get update
 
sudo apt-get install jenkins					
			
jenkins --version 

To Check the status of Jenkins Server :::

systemctl status jenkins
systemctl stop jenkins
systemctl start jenkins
systemctl restart jenkins
systemctl enable jenkins 		==> To make jenkins as startup service

To Access Jenkins ::

	<external_IP_Addr>:8080
			
Jenkins Plugins are extension to Jenkins.		

In future ::
		Docker 
		Ansible
		Terraform
		Prometheus
		Grafana
		Kubernetes
		
Working with EC2 Instances :::

	Ubuntu 
		Start/stop/terminate
	Install/Update/remove the packages 
	Manage Security Group 
	How to install Jenkins kind of services by enabling the Ports.
	
EC2 Instance :::

	Authentication :::
	
		- Password based
		- Token based 
		- Key based 
		- Passwordless auth
		- MFA 
		
	IAM Services ::::
	
		It is used to establish secured access to AWS Resources.
		
		RBAC - Role Based Access Control 
		
		
		100 Members in my DEV_Team
		
		Developer_Group		--> Assign the required access at the group level.
		
		Lead_Group
		
		Appln_Owner_Group
			
				
		https://198147585319.signin.aws.amazon.com/console
		devopsuser1
		
		
		S3 		==> This can be accessible using web url/Access point
		
		EBS 	==> This can be accessible using EC2 Instances 
		
		EFS 	==> This can be accessible using EC2 Instances as well as web url/Access point
		
		
		Container Service :::
		
			ECS 
			
			ECR 
			
			EKS 
			
			IP -- Static IP / Dynamic IP
			
################
7th August 2023
################

		AWS Services 
		
		Assignment
		
		30 GB EBS 
		
		Cache Memory.
		
			ECS	
			ECR 
			EKS 
		
		AWS DevOps Services ::::
		
		
		DevOps Tools/Service :::
		
			Open-Source DevOps Tools :
				git, jenkins, Maven Integration, ansible, docker, kubernetes, terraform, maven, prometheus, grafana
			
			Managed Services : AWS/Azure/GCP :::
				AWS :::
				
					Code Commit
					Code Build 
					Code Pipeline 
					Code Artifacts 
					Code Deploy 
					Code Test 
					
			
				
				
################
8th August 2023
################


		Linux Fundamentals :::::
		
		
		Environments :::
		
		DEV (VM)
		QA1,2,3,4  (VM)
		UAT	(VM)						===> PROD -- End User (Static)
														Load Balancer
														Ingress 
														
														
		Linux Fundamentals :::::
		
			Operating System :::
			
			Windows 
			Android 
			MacOS
			Linux 
			
		Linux is one of the Light weight operating systems 
			It is very much reliable when compared to other OS
			It is Open-Source, with less resource utilization
			It is Command Line Interface - CLI 
			
		Linux Distributions :
			RHEL 
			Centos 
			Debain/Ubuntu - Support GUI
			Fedora 
			
		Shell Scripts --> 
			Collection of Linux Commands. 
			
		What is actually Expected form any Operating System ???
		
			- Access to Machine 
			- Manage the Users
				Create Users 
				Alter users
				Grant Access to User to work on any resource/Application 
			- Manage the Applications 
				Install/Remove/Upgrade
			- File Management 
				- Create/Delete/Update 
				- Grant access to files
				- Revoke Access  files 
			- Handling Remote Servers -- Working with Networking - Hybrid/single cloud/Multi-Cloud - AWS/AZure
				- Establish connection to another Machine
						SSH Based Connection
				- What level of Authentication we create ?
						Password based Authentication
						Passwordless Authentication
						Token Based Authentication
						Key Based Authentication
				- What level of Authorization we create ?
			Automation -- Scripts 
				- Shell Scripts 
				
			
			
			
		- Linux Misc. Action/Commands 
		
			System Update!
			
			IAAS (or) PAAS ???
			
		Package Udpates -- Security Patches/tools Patches
		
		
		Package Managers ::: apt/yum/dnf
			apt update -y
			yum update -y 
			dnf update -y

		Linux Distributions :
			RHEL 							yum update -y 
			Centos 							yum update -y 
			Debain/Ubuntu - Support GUI		apt update -y			
			Fedora 							dnf update -y	
						
		root user :		--> In Linux Machines, only root user id will have complete access to the system to work with pkg mgmt.
		
			sudo -i 
			hostname -i
			ip addr 
			
		- Manage the Applications 
			Install/Remove/Upgrade
			
		- File/Directory Management  
		
			Linux CLI Commands 
				
				- Explore the System Directories
				- create a dir
				- Create Files 
				- Working with Files
				
			Linux -- The core of Linux OS - kernel / Namespaces 
				
		
		pwd 
		ls 
		cd <dir_name>
		cd ..
				
   50  hostname -i
   51  ip addr
   52  clear
   53  history
   54  cear
   55  clear
   56  apt update -y
   57  apt install git
   58  clear
   59  pwd
   60  ls
   61  cd /
   62  pwd
   63  ls
   64  cd etc/
   65  ls
   66  clear
   67  ls
   68  cd ..
   69  clear
   70  ls
   71  cd opt
   72  ls
   73  cd var
   74  cd ..
   75  cd var/
   76  ls
   77  cd lib/
   78  ls
   79  cd jenkins/
   80  ls
   81  which java
   82  which jenkins
   83  cd /usr/bin
   84  ls
   85  clear
   86  cd /
   87  clear
   88  cd /usr/lib
   89  ls
   90  clear
   91  cd ~
   92  clear
   93  ls
   94  mkdir demodir1
   95  ls
   96  cd demodir1/
   97  ls
   98  cd ..
   99  ll
  100  clear
  101  ls
  102  cd demodir1/
  103  ls
  104  cd ..
  105  cd demodir1/
  106  pwd
  107  mkdir sub-dir1
  108  ls
  109  echo "Hello Everyone"
  110  echo "Hello Everyone" >> file1.txt
  111  ls
  112  cat file1.txt
  113  echo "Hello Team" >> file1.txt
  114  cat file1.txt
  115  clear
  116  ls
  117  cat file1.txt
  118  echo "dummy record" > file1.txt
  119  cat file1.txt
  120  echo "Hello Team" >> file1.txt
  121  clear
  122  cat file1.txt
  123  echo "Hello Everyone" > file1.txt
  124  cat file1.txt
  125  touch  file2.txt
  126  ls
  127  cat file2.txt
  128  clear
  129  vi file3.txt
  130  ls
  131  cat file3.txt
  132  vi file4.txt
  133  cat file4
  134  cat file4.txt
  135  clear
  136  ls
  137  cat file4.txt
  138  vi file4.txt
  139  cat file4.txt
  140  ls
  141  cp file4.txt file4-bkup.txt
  142  ls
  143  clear
  144  cat file4
  145  cat file4.txt
  146  cat file4-bkup.txt
  147  clear
  148  ls
  149  cd sub-dir1/
  150  ls
  151  cd ..
  152  ls
  153  cp file4-bkup.txt sub-dir1/
  154  cd sub-dir1/
  155  ls
  156  pwd
  157  cd ..
  158  ls
  159  mkdir sub-dir2
  160  ls
  161  cd sub-dir2/
  162  ls
  163  cd ..
  164  ls
  165  mv file4-bkup.txt sub-dir2
  166  ls
  167  cd sub-dir2/
  168  ls
  170  history
		
			
		
		
			Create/Edit files using vi editor 
			
				$ vi file2.txt
					press i 					# to get into insert mode
				  asdfasdfasdf
					
					press esc and type :wq 		# to write and quit
					
					press esc and q!			# Exit from the file without saving


					
################
10th August 2023
################

			- Access to Machine 
			- Manage the Users
				Create Users 
				Alter users
				Grant Access to User to work on any resource/Application 
			- Manage the Applications 
				Install/Remove/Upgrade
			- File Management 
				- Create/Delete/Update 
				- Grant access to files
				- Revoke Access  files 
			- Handling Remote Servers -- Working with Networking - Hybrid/single cloud/Multi-Cloud - AWS/AZure
				- Establish connection to another Machine
						SSH Based Connection
				- What level of Authentication we create ?
						Password based Authentication
						Passwordless Authentication
						Token Based Authentication
						Key Based Authentication
				- What level of Authorization we create ?
			Automation -- Scripts 
				- Shell Scripts 
				
				
~~~~~~~~~~~

			- File Management 
				- Create/Delete/Update 
				- Grant access to files
				- Revoke Access  files 


			- Create/Update 
			
			- Delete/remove file/dir :::
			
				rm file1.txt
				rm -f file1.txt 
				
				rm -rf dir1 
				
				
			Linux File Access Mode Levels :::
			
			-rw-r--r--
				
			----------
			
			drwxrwxrwx		
			
			
			-			====> Denotes the type of component 	==> - / d 	i.e., file / directory
			
			 ---		====> Denotes the access at owner level ==>	rwx		i.e., read / write / execute 
			
			sample.sh 	root user is the owner
			file.txt    root user is the owner 
			
			-rwx
			-rw-
				
			sample1.sh 	root user is the owner  / devuser1
			
			-rwxr-xr--
			
			In general, 
			
				Owner 			devuser1 
				Group users		devgroup1
				Common users	testuser1	/ testgroup1
		
			File Access Mode :::
			
			----------
			drwxrwxrwx
			
			
			-rwxr-x--- and -rwxr-xr--
			
			chmod 777 file1

			chmod 777 dir1/
			
			
		Multiplie users ::::
		
		Linux User Management :::
		
			root user 	 ---> Admin level user
			
			default user ---> ubuntu / ec2-user 
			
		DevOps Team :::
		
			devopsadmin ::
				- created 
				- Enable access to this user
		
			To Create User in Linux :::
			
			Run te following commands as a root user :
			
				useradd devopsadmin 
				useradd -m -d /home/devopsadmindir devopsadmin1 
				
				passwd devopsadmin 
				
				NEW PASSWORD:
				RETYPE NEW PASSWORD:
				
			su - devopsadmin
			
			Jenkins_Server :::
				default user ---> ec2-user 
			docker 
			ansible 
				
			useradd jenkinsadmin 
				
				/var/lib/jenkins $ ll  
				
			useradd dockeradmin 
			useradd ansibleadmin 
				chmod 
				chown -R jenkinsadmin jenkinsadmin /var/lib/jenkins/
				
				[root@ip-172-31-40-188 mydir1]# chown devopsadmin myscript1.sh
				
				chown devopsadmin /root/mydir1/myscript1.sh
				
				cat /etc/group
				cat /etc/passwd


			User_ID 
			Group_ID 
			Service_ID 
			
			
			Jenkins_Server :::
			
				create huge list of files/artifacts 
				
				Maintenance of Jenkins Server :::
					- Periodically I need to delete all the outdated files & Artifacts.
						- weekly basis
						
						/var/lib/jenkins/workspace/*
		
					Valid Service_ID to access this path ?	


    2  yum update -y
    3  clear
    4  ls
    5  mkdir mydir1
    6  cd mkdir1
    7  cd mydir1/
    8  vi file1.txt
    9  apt udpate -y
   10  clear
   11  echo "hello"
   12  ls
   13  clear
   14  ls
   15  ll
   16  clear
   17  ls
   18  echo "rec1" >> file2.txt
   19  echo "rec1" >> file3.txt
   20  echo "rec1" >> file4.txt
   21  ls
   22  rm file4.txt
   23  ls
   24  rm -f file4.txt
   25  ls
   26  rm -f file3.txt
   27  ls
   28  mkdir sub-dir1
   29  ls
   30  rm sub-dir1/
   31  rm -rf sub-dir1/
   32  ls
   33  clear
   34  ls
   35  mkdir sub-dir1
   36  ls
   37  ll
   38  mkdir sub-dir2
   39  ls
   40  ll
   41  clear
   42  ll
   43  touch file3.txt
   44  ll
   45  mkdir mydir3
   46  ll
   47  touch file5.sh
   48  ll
   49  clear
   50  ll
   51  chmod 777 file1.txt
   52  ll
   53  chmod 755 file1.txt
   54  ll
   55  chmod 555 file1.txt
   56  ll
   57  echo "asdfasd">> file1.txt
   58  cat file1.txt
   59  clear
   60  ll
   61  chmod 777 file2.txt
   62  ll
   63  chmod --+ file2.txt
   64  clear
   65  pwd
   66  ll
   67  chmod 777 *.txt
   68  ll
   69  chmod 755 *.txt
   70  ll
   71  echo "echo 'Hello'" > s1.sh
   72  ll
   73  chmod 777 s1.sh
   74  ls
   75  ./s1.sh
   76  rm s1.sh
   77  ls
   78  clear
   79  ls
   80  echo "adsfad"
   81  ll
   82  echo "echo 'Hello'" >> myscript1.sh
   83  ls
   84  ll
   85  chmod 744 myscript1.sh
   86  ll
   87  ./myscript1.sh
   88  cat myscript1.sh
   89  echo "echo 'Hellasdfasdfasdo'" >> myscript1.sh
   90  echo "echo 'adfasdfasdfHellasdfasdfasdo'" >> myscript1.sh
   91  echo "echo 'adfasdfasdfHelasdfasdlasdfasdfasdo'" >> myscript1.sh
   92  echo "echo 'adfasdfasdfasdo'" >> myscript1.sh
   93  ll
   94  ./myscript1.sh
   95  cat myscript1.sh
   96  clear
   97  cd /
   98  pwd
   99  ls
  100  cd home
  101  ls
  102  cd ec2-user/
  103  ls
  104  pwd
  105  ll
  106  cd ..
  107  ll
  108  cd /
  109  ll
  110  clear
  111  useradd devopsadmin
  112  ls
  113  cd /home/
  114  pwd
  115  ls
  116  cd ~
  117  useradd -m -d /home/devopsadmindir devopsadmin1
  118  ls
  119  cd /home/
  120  ls
  121  ll
  122  cd ~
  123  passwd devopsadmin
  124  passwd devopsadmin1
  125  clear
  126  cat /etc/passwd
  127  clear
  128  su - devopsadmin
  129  su - devopsadmin1
  130  passwd devopsadmin1
  131  su - devopsadmin
  132  passwd ec2-user
  133  visudo
  134  clear
  135  ls
  136  cd mydir1/
  137  ll
  138  chown devopsadmin myscript1.sh
  139  pwd
  140  ll
  141  visudo
  142  cat /etc/passwd
  143  cat /etc/groups
  144  cat /etc/group
  145  clear
  146  cat /etc/group
  147  history




################
11th August 2023
################				
				
				User Management :::
				
					Password based Authentication
					Key Based Authentication
						SSH Keys 
							Private key 
							Public key 
							Authorized Key 
					Passwordless Authentication
					Token based Authentication
						-> Size 16 - 24 chars 
				
					

				vi /etc/ssh/sshd_config
				service sshd reload
				
				hostname, username, keys
				
				ssh-keygen 
				
				id_rsa  			--> Private key 
				id_rsa.pub			--> public key
		
				ssh-copy-id devopsadmin@172.31.38.80	


				

				ssh devopsadmin@172.31.38.80
				
				VM in ur aws platform 
				
				mobaxterm to connect to ur VM ???
				
				hostname, username, keys(*.pem)
				
				
			Remote Server Access ::::
			
				Source Machine				IP_Addr, (SSH - Port 22), userid, ssh-keys
					Target Machine 			IP_Addr, (SSH - Port 22), userid, ssh-keys
						
				In Source_Machine ::
				
					su - devopsadmin
					devopsadmin $ ssh-keygen
					 give enter to go with default path 
					 give enter 
					 give enter
					
					you should able to see :
						id_rsa
						id_rsa.pub 
					
					ssh-copy-id <target_Machine_UserName>@<target_machine_private_ip>
					ssh-copy-id devopsadmin@172.31.38.80
					
					yes
					
					enter
				
					ssh devopsadmin@172.31.38.80
					
					Copy the files from one server to another server!!!
					
					
					scp filefromserver1.txt devopsadmin@172.31.38.80:/home/devopsadmin
					
					amazon-linux-extras install epel -y

[devopsadmin@ip-172-31-40-188 ~]$ history
    1  exit
    2  pwd
    3  ls
    4  ls -a
    5  ls
    6  ls -a
    7  exit
    8  clear
    9  ls -a
   10  exit
   11  clear
   12  ls -a
   13  ssh-keygen
   14  ls -a
   15  cd .ssh/
   16  ls
   17  clear
   18  ls
   19  cat id_rsa
   20  cat id_rsa.pub
   21  clear
   22  ssh-copy-id devopsadmin@172.31.38.80
   23  ls
   24  cat id_rsa.pub
   25  cat known_hosts
   26  cd ~
   27  clear
   28  ssh devopsadmin@172.31.38.80
   29  cd .ssh/
   30  ll
   31  cat id_rsa.pub
   32  ssh devopsadmin@172.31.38.80
   33  clear
   34  ls
   35  cd ~
   36  ls
   37  echo "rec1" >> filefromserver1.txt
   38  ls
   39  scp filefromserver1.txt devopsadmin@172.31.38.80:/home/devopsadmin
   40  cat filefromserver1.txt
   41  scp filefromserv.txt devopsadmin@172.31.38.80:/home/devopsadmin
   42  cd .ssh/
   43  cat id_rsa
   44  ls
   45  pwd
   46  cd ~
   47  pwd
   48  cd /
   49  pwd
   50  ls
   51  clear
   52  amazon-linux-extras
   53  clear
   54  amazon-linux-extras
   55  amazon-linux-extras install epel -y
   56  exit
   57  history

***************************************************************************8


					
  139  pwd
  140  ll
  141  visudo
  142  cat /etc/passwd
  143  cat /etc/groups
  144  cat /etc/group
  145  clear
  146  cat /etc/group
  147  history
  148  yum update -y
  149  clear
  150  su - devopsadmin
  151  passwd devopsadmin
  152  vi /etc/ssh/sshd_config
  153  service sshd reload
  154  su - devopsadmin
  155  exit
  156  vi /etc/ssh/sshd_config
  157  service sshd reload
  158  exit
  159  clear
  160  vi /etc/ssh/sshd_config
  161  service sshd reload
  162  clear
  163  su - devopsadmin
  164  amazon-linux-extras install epel -y
  165  amazon-linux-extras install java-openjdk11 -y
  166  python --version
  167  ansible --version
  168  amazon-linux-extras
  169  amazon-linux-extras install ansible2
  170  ansible --version
  171  history
  
  aws
  linux 
  

#################
14th August 2023
#################


	Linux Shell Scripting :::
	
		Development Team --> 
		
			Development :::
				
				Programming Language ::
				
					Used to develop the Business Applications
						D/M/W -
						Eg.: Java/C#/Python/.Net
					
				Scripting Language ::
					Light weight version of Programming Language

					Used to perform some process automation:
						Eg.: 
							shell/python_script/java_script/vb_script/groovy/yaml..........
							
					On DevOps Perspective ::
					
						To Automate :
							Continuous Developement to Monitoring...
							
							yaml/groovy/shell/python_script 
							
							
				Micro_Service :::
				
				E_Commerce Application ::
				
				Sign_up ===> User Registration :::
				
					3-Tier Architecture :::

						FrontEnd
						Application_Logic --> 
						BackEnd(DBase)

			email_ID : asdfasdadfasdfs
			
			
			###################


			Client Side Scripting!
			
			
			Linux :::
			
				To Fundamentals of Shell Scripting :::
				
				Software :::
					Collection of Programs 
						Program :
							Set of Instructions  --- based on the high level language
							 Programming/Scripting Language
							 
				Concepts ::::
				
					Data!
						
					1. Variables			x = 10
					2. What type of variables ? 
					3. How to handle it?
						At runtime?
						Once data is received the data ???
						store the data !
						
							Variables
							Alpha-Numeric x = 10
								read x
							Array x[10] = {1,2,3,4,5,6,7,8,9,0}
								loops 
								for/while/do-while loop
								 read x[i] 
								 
							File Handling :
								stored in the form of files 
									create / write / read / delete / update
							
							Database : 
								Tables - row/columns - relational - which help to handle random data.
							
							
				shell scripts to interact with Linux Machine
				
				Python script to invoke shell script to manage jenkins server
				
				CLI 
				
				cmd prompt ???
				
					is used to interact with Operating System 
					
						Linux - bash	--> shell/bash ==> command/scripts
						window - cmd    --> powershell
						
							Hybrid --> 
						
						
				AWS Instances :::	--> Provisioning the servers 
				
						IAC Tools 	--> Terraform 	- Provisioning the servers  ->  HCL  
									--> Ansible 	- To Config the servers		->  YAML
									
								Python scripting	==> Provisioning the servers / Config the servers	
								
								Shell Scripting 	==> Provisioning the servers / Config the servers
								
								
Linux Shell Scripting examples ::::

		Scripting is completely based upon your logical thinking!		
		
			echo "Hello"
		
		Calculate sum of two numbers !
		
			Declare two variables (a,b)
			Assign values for each variable 
			print a + b

			Declare two variables (a,b)
			Assign values for each variable 
			print a + b

			Declare two variables (a,b)
			Assign values for each variable 
			print a + b

			Declare two variables (a,b)
			Assign values for each variable 
			print a + b			
			
			
			Functions !
			
			sum()
				Declare two variables (a,b)
				Assign values for each variable 
				print a + b	
			
			call sum() 
			call sum()
			
	
		


