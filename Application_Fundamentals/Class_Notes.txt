
Module : 2
#################
15th August 2023
#################

Application Development Fundamentals :
• Overview of Application Development
• Various Types of Application
• Introduction to Databases
• Multi-tiered application architecture
• Overview of Monolithic and Microservices


	Applications are nothing but the domain 
	
		Banking Application 
		Insurance Application 
		Retail Application
		
	Software are collection of Programs :
	
	Program is the set of Instruction/Task
	
	
	Types of 
	
	
	Software :::		Software are collection of Programs :
	
		Application Software :
		
			Desktop Application
			Mobile Application
			Web Application
				Banking Application 
				Insurance Application 
				Retail Application 
		
		System Software :
		
			Operating System - OS - W/M/L/A
			Middleware Products
			Micro-Chip level programming
			Embedded Applications
			
		Underlying Hardware!
		
		
		Based on Workload :::
		
			Web Application ::::		Static Web appln./ Dynamic web appln.
			
				Front_end / Application_Logic(C#.Net/Java/Python) / DataBase(SQL/ORACLE)		---> 3-Tier Architecture

			private cloud / public cloud ??

		
		Monolith Application Architecture
				(vs)
		Micro-Service Based Application Architecture
				
					
				Monolith Application Architecture  :::
					
						The Application Components are tightly coupled.
						
				Micro-Service Based Application Architecture :::
				
						The Application is splitted into various services.
						It is loosely coupled.		
						
		
		Insurance Domain ::: Legacy 
		
			Travel/Healthcare/personal/Children

		DevOps Architect/Application Architects/Owners -- We have to do a detailed assessment about the business, process and tools
		
		On-Premises ==> Datacenter - Mainframe server 
		
		Cloud Adoption --> 
		
			Monolith Application --> tightly coupled.
			
				- Splitted into micro-services and that be migrated to cloud
				- All the New applications should be directly developed in cloud based on micro-services architecture
				- Effort that takes to convert from monolith to micro-services that is very very high & Costly.
						Docker & Kubernetes 
						
				- Reverse Engineering :				
						To recreate the same using java based web appln.
						Code Conversion
						
				
		script 		-- appln1.
		
			10 funcs		
						
		script 			-- appln2.
					
			2 funcs		+ 8 func			
			
		Micro-Service :::
		
		10 services
		
		Web_Application :::		Dynamic web appln.
		
		Module-1 :::
		
			- User_Registration 
			
				Application_Logic ::
							user_name/user_Id/Email_Id/Contact_No/Password_Creation/Address
					functions 
						to validate the email - code function			
			
		Module-2 :::
		
			- User_Sigin

				Application_Logic ::
							Email_Id/Password	
									to validate the email - code function
									
									
		What is Database ????
		
			To maintain and manage the relational Data.
				Table
					Rows / Columns 
					
			Data : --> Is just a raw text - without any meaning

			Information : --> Processed Data.
			
			What is Information ?
			
				INDIA ?
				
				INDIA is a Country :: 
				
			Storage :::
			
			INDIA is a Country	-	File 
		
		
			Database -- It is a collection of Tables 
			
			Tables -- are collection of Rows and Columns
			
			
			Name 		Country 
			Swati		INDIA 
			asd			PAKI
			asd			USA
			
			Relational Database Management System - RDBMS :::
			
			
Introduction to Java Concepts
• Overview of Java and its Architecture
• Compiling Source Code and Packaging Applications
• Java Console based and Web based Applications
• Deployment to Tomcat and Consuming Java Applications
• OOPs Concept Practical Includes

Practical Includes

1. Create a Console based Java Application
2. Create a Dynamic web Application and Deploy it to Tomcat
Server			
	
	Continuous Improvement!!!!!!
	
	
		The List of Tools to work in this module :::
			
			-	Window OS & Mac 			==> Dev Machine
			
			- 	Install :			Open Source -
					- JDK 
					- Eclipse IDE for Web Development 
					- Tomcat Web Application Server 
					- Visual Studio Code
					- SQL Client 
					- Python 
					- GIT 
					
					
#################
17th August 2023
#################	
		
		echo "Hello" >> file1.txt 
		
		Hello 
		
		echo "echo 'Hello' " >> ./file2.txt 
		
		home/devopsadmin $ echo "echo 'Hello' " >> ./file2.txt
		
		
		home/devopsadmin $ echo "echo 'Hello' " >> home/devopsadmin/tempdir1/file2.txt
		
		home/devopsadmin/tempdir1/file2.txt
		
		./file2.txt 
		
		
		./file2.txt 
		
		cat file2.txt 
		
		echo Hello 
			


		The List of Tools to work in this module :::
			
			-	Window OS & Mac 			==> Dev Machine
			
			- 	Install :			Open Source -
					- JDK 
							https://jdk.java.net/20/
							
							https://jdk.java.net/java-se-ri/11-MR2
							
							
							downloads jdk package & extract 
							define environment variable, to access that application across the machine
													
							
					- Eclipse IDE for Web Development  - EE
							https://www.eclipse.org/downloads/packages/release/kepler/sr2/eclipse-ide-java-ee-developers
					
					- Tomcat Web Application Server 
					
							https://tomcat.apache.org/download-80.cgi
					
					- Visual Studio Code
					
							https://code.visualstudio.com/download
					
					- SQL Client 
					
					- Python 
					
					- GIT 	
			
https://jdk.java.net/20/


#################
18th August 2023
#################		

			Java is a Object Oriented Programming Language.
			
			Programming 
			
				Applications ::::	
					
					Desktop/Mobile/Web 		===> 
					
				
			Developers Role ::
				
				- Design of Application 
				- Code
				- Build 
				- Test 
				- Promote to Target Environments 
			
			
			
			DevOps Engineer Role :::

				
				--> Type of Programming Language 
				--> Tools used to develop the Application 
				--> Tools used to build the Application
				--> Tools used to perform Automated Testing 
			
			Worst Case of DevOps Engineer ?
			
				Challenges ??
				Drawback of DevOps  ???
				
			People! ==> are the main challenge!!!!
			
			DevOps is all about :	
					People 
					Process 	--> are meant for Continuous Improvement
					Tools		-->  
					
			Individual member of DevOps Team ::: 
					- Update yourself regularly.
					- Always find the scope for automation.					
					
					DevOps - DevSecops - SRE - GitOps - MLOps - AIOps .....
					
			Java_Appln ==> approached to onboard their appln to devops. 
			
				Automate --> CI/Cd/CD/CT/CM
				
			
			
			DevOps Engineer Role :::

				
				--> Type of Programming Language 
						Java --> How the java pgm is written
							
				--> Tools used to develop the Application 
				--> Tools used to build the Application
				--> Tools used to perform Automated Testing 			
			
			Java Programming :::
			
				Architecture ::
				
					Simple java program --> *.java ==> Desktop Application 
					
					Mirco-services based architecture
					
						All the dependencies :::
						
						Developer :::
							*.java ===>
							
								Notepad to write the pgms ??
								compile 
								create binaries 

								build 
								test 
								deploy
								
							IDE - Integrated Developement Environment 
									Eclipse ???
									- to write java pgm?					==> Code Editor
									- compile program & create artifacts	==> Build Tool			javac *.java
									- run the pgm 							==> Hosted Servers(tomcat)/terminals java pgm1
			
							Build --> What type of build tool we use ?
							
									ant/gradle/maven 
									
							MAVEN is a build tool ==> used to compile and create artifacts (binaries - *.war/*.jar)
							
							
					Java --> is called as platform independent language
							
					Dev Environment --> I have create java application in windows.
					
						create once and run in any platform 
						
							Linux/Mac/Android/iOS
				
					JVM ==> 
					
					sample.java ==> 
					
					*.class files 
				
				Build Tool Maven
				
					Maven is build tool used to identify all the dependencies and plugins required
						- To perform Automated Build 
						- To perform Automated Unit Testing
						- Automatically create the artifacts 
						
						
					Install Maven in the build server 
					
						mvn == command we can execute maven build 
						
						Maven Architecture
				
							- Maven Folder Structure 
							
							- pom.xml 
				
				
			--> Java Project Creation using Eclipse :::
			
			
				Type of Projects ::::
				
					Simple Java Project :
					
						Java_Project 
							src 
								app1.java 
								app2.java
					
					Maven Web Application Project 		with All the dependencies :::
					
						Java_web_App_Project
							src
								/main/java
										*.java 
								/test/java
										*.java 
							resources 
								/html 
								/css 
								/bootstrap
								
							targets/
								/*.war 
								
							pom.xml		==> Used to define all the dependencies and plugins used for Maven Application build
							
							
									create artifacts --> what is name of artifact ?		signin.war
														 what type of artifact ? war
														 Automated Unit Testing 
															JUnit 
															TestNG 
															Selenium
															
							Maven Goals ::::
							
								mvn 


		Build Tool :

		Maven Build Tool --> Used to build and Create the artifacts.

		Why Maven ???


		signup.java ===> build - plugins, dependencies, Unit testing, tools
		pom.xml ==> Which defines the application artifacts, plugins and all the required depedencies


		How maven download and use the plugins and all the required depedencies>>>
		Maven Repositories.

			Central repo --> Remote Repo --> Local Repo
		
		Maven Project Structure :::

		MVN_Poject1
			src 
				main
					java
				test
					java
			target
				artifacts *.war / *.jar
			pom.xml 			==> defines the application artifacts, plugins and all the required depedencies
			
				By using Maven Archetypes
			JRE_Libraries
			MVN_Libraries


		Maven Commands/goal:

		Maven Goals :
			● mvn clean - to clean the target folder.
			● mvn compile - to compile the source code
			● mvn test - to compile and execute junit test cases
			● mvn package - to compile, test and package the application
			● mvn install - to install the package to local repository.
			● mvn deploy - to deploy the package from local repository to remote repository.


					mvn clean package ??


			MVN_Poject1
				src 
					main
						java
					test
						java
				target
					artifacts *.war / *.jar
					
				pom.xml 			==> defines the application artifacts, plugins and all the required depedencies
				
			
			Java Spring boot Application Frameworks :::
			
			
					Using Maven we can create ::
					
			.Net Framework !!!
				c#.Net
				ASP.Net 
				
				
				
		Java Components ::
		
			variables ===> Is an identifier 
						x = 500
						
					Datatype :::
						
						x = 500 		Integer / Numeric
						x = 500.5		floating / decimal
						x = "Hello"		Char / String 
						x = "Hello123"	Alpha-Numeric
					
					int x = 5;
					
				
				static / dynamic 
				
				public / private / protected 
				
			Arrays ===>		Is a group of values with same datatype 
			
					int x = 5;
					int x[5] = {5,6,7,8,9};
						indexed 
								starts with 0/
								
					print x[3] ==> 8
					print x[0] ==> 5
					print x[4] ==> 9
					print x[5] ==> 		Exception / Error ==> Out-of Index/Range Exception.
					
			Functions/Methods :::
			
				print "Hello" 
				
				string disp() {				// Function Definition
					print "Hello"
				}
						
					
				disp();						// Function Invocation
				
				sum()						// function without argument
				{
					int a = 5;
					int b = 6;
					c = a + b;
					return c;
				}
				
				
				sum();	// 11
				
				sum(int a, int b)						// function with arguments
				{
					c = a + b;
					return c;
				}				
					
				sum(5,6);		// 11
				
				sum(1,2);		// 3
				
				
				
			functions 
			
			Conditional Statements :::
			
				if Statements
				switch case 
				
			Operators ==> 6 types of arithmetic operators ==> ==
			Logical Operators 
			
			Looping statements :::
			
				for
				while 
				do while 
			
					int x[5] = {5,6,7,8,9};
						index will start from 0
						x[0] = 5;

				Search for value 7 ?
				
					Sequential Search
				
				if x[0] == 7 
				print 7
				
				
			Aritifacts ::::
			
				Testing ==> *.war 
				
				Execute the artifacts ::::
				
			Dev Servers 

			Build Servers 	
						compile & Create *.war 
			
			Test Servers/Target server/Hosted Server 	===> Virtual Machines - VM - Hardware
					Install Web Application Server - Tomcat/Nginx - software
					
					
				Deploy *.war to Test Server 
				
				How to Test this application :::
				
					Web Application Server - Tomcat / Nginx
				
				
			
			Production Servers/Target server/Hosted Server
				
				
				
				

			

		Create a Maven Console Application
		Create a Maven Web Application 
		Create a Maven Springboot Application 	

		

					
					
					Web Application :::
					
						What the components / dependencies to create web Application ?
						
							3-tier 	==> front-end(html/css/bootstrap/php/jsp) / Application_Logic / Back_End(Dbase)
							2-tier  ==> front-end / Application_Logic
							1-tier  ==> Application_Logic
			
					Micro-Service ==> 
					
						Main_program ==> Interact with frontend 
							sub-program1,2,3,4
			
		
			./mysript.sh a b c 
	
	
#################
21st August 2023
#################					
				
				
			Create a Java Console :
			Create a Java Web Application :	
			
			Maven Tool to create -> Console / Webapplications.
			
			
		Create a Maven Console Application :
				Desktop Application :::	
						Group_ID
							org.apache.maven.archetype
						Artifact_ID
							maven-archetype-simple
						
		Create a Maven Web Application 
						Group_ID
							org.apache.maven.archetype
						Artifact_ID
							maven-archetype-webapp
							
		Create a Maven Springboot Application 
		
		Create a Maven Console Application :		
		Maven Repository :::		https://mvnrepository.com/
		
			Maven Remote / Central Repository  
		
			Eg.: 
				<dependencies>
					<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>3.8.1</version>
					</dependency>
				</dependencies>
				
			Maven Local Repository
			
			Java Project :::
			
				
				Java_Package 
					Class 				
						signin.java 


			Package => Collection of classes 
			
			Class	=> Collection of Functions/Methods/Variable

		Create a Maven Dynamic Web Application :::
		
			
		Create a Maven Springboot Application 		--> Web Application Framework!
		
		
		Java Console Application :
		Java Dynamic Web Application :
		
		SpringBoot Application :					
	
		
#################
22nd August 2023
#################

		- A Simple Java Console Application 
		- A Java Dynamic Web Application 
		
		- A Java Maven console Application 
		- A Java Maven Web Application
		
		- Maven Springboot Application.
		
		
		In Eclipse Add Tomcat Server Configuration.
		
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>www.loksaieta.com</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>
<body>
  <div class="jumbotron" style="background-color:white">
      <img src="https://octodex.github.com/images/spidertocat.png" alt="Spidertocat"
           class="img-responsive center-block" style="width:250px"/>
      <h2 class="text-center">Hello Team</h2>
      <p class="text-center">Application Modernization </p>
  </div>
</body>
</html>




	Application Testing:

	Shift Left Approach 	
	
	dev --> qa --> uat --> Prod
	
#################
24th August 2023
#################	
	
		- Simple java program using Notepad/cmd prompt/vi editor
		
		- IDEs 
	
		- A Simple Java Console Application 
		- A Java Dynamic Web Application 
		
		- A Java Maven console Application 
		- A Java Maven Web Application	
				
		- Maven Springboot Application.		https://start.spring.io/
		
		- Testing
			Junit
			TestNG
			Selenium
	
	
		Environments :::
		
		Dev
				1. Unit Testing :	
				
		Testing Environment:
		
			-> Test Data 
			-> Test Scenarios 
			-> Test Cases	
		
			QA Testing :

				2. Integration Testing
				3. Regression Testing
				4. Performance Testing
			
			
			UAT Testing :
			
				5. Acceptance Testing

		
		Production 
	
	
				Sample.java ===> 
				
				dev1
				dev2
				dev3


			Web application ::::
			
			User Login ::
			
				-	User_Name :
				-	Password  :
				
					Login_Button	Cancel_Button
				
			Web Browser:
			 chrome, IE, Edge, Firefox,.........
			 Mobile 
			
			
			Selenium Grid ==> 
			
				
			Scenarios ::: 
				1. Client side scripting		 
						all the basic validations 
							- User_Name --> length, chars, spl char, alpha-numeric content
							- Password  --> length, chars, spl char, alpha-numeric content
							
				2. Server side Scripting
							- Receive the inputs from user -> User_name,Password,Click_Event
							
							- Once login is successful, it will route to next page 
							
							- If it is not successful, it will route to error page
							
				Website	==> collection of web pages --- 1000s pages
				
				Automated Testing tools like selenium:::
				
				TestNG ==> Reporting Tool based on JUnit.

				Selenium Test Scenarios :::
				
					Create a Selenium WebDriver instance
					Configure browser if required
					Navigate to the required web page
					Locate the relevant web element				screen scraping!!!!
					Perform action on the web element
					Verify and validate the action

				
				
#################
25th August 2023
#################	


			Assignment : Linux Assignments ??
						1. create dir, copy, move the files. 
						2. Prime no. or not.
						3. welcome msg using echo.
						
					Script :::
					
						1. Script to install build tools in a server Linux server ?
						
							git 
							maven
							
			Server Provisioning  IAC Tools
			
			Server Configuration
							
script 1 :					
#!/bin/bash

# Update package information
sudo apt update

# Install Git
sudo apt install git -y

sudo apt install maven -y

# Check Git version
git --version



GITHUB :::  --> It is used to version the source code.


script2 :

	git clone 
	mvn clean package    *.war_v2 -- before creating new version, take a bckup of older version - Archive. Artifactory Repository
	
	
script3 : deployment1

	SCP *.war to QA_test_server		*.war_v2 
	
script4 : 

	QA_Testing - 
	
script4 : deployment3

	SCP *.war to UAT_test_server
	
script5 : 

	UAT_Testing - 	
	
script6 : 

	PROD			 *.war_v2
	


Groovy 

Yaml

Python Scripts 	
	

			Implement all the tools that are required to exec.
			
			Upstream and Downstream Dependencies.
			
			I have master script.
			
		Tasks ::
		
			1. Write a shell script to install git and maven in Ubuntu Machine.
			2. Write a script to take a backup of the artifacts to backup server. 
			3. Install tomcat in the ubuntu machine.
			
			
			a[5] = {2,3,8,4,5}

			
			a[2]
			
			
			array=(Sample process seven)
				
			echo ${array[0]:1}		==> rocess
								
			apt install git -y
			

				
#################
28th August 2023
#################	

		Selenium Demo :

		
			Create a Selenium WebDriver instance
			Configure browser if required
			Navigate to the required web page
			Locate the relevant web element				screen scraping!!!!
			Perform action on the web element
			Verify and validate the action


		Jenkins Server :::
			<public_ip>:8080
			
			
			www.amazon.com
			
				In - Add to cart ==> Module 
				
				Login 
				
				search 
				
				add to cart 
			









			
			
			
Install JDK
Install Eclipse
Download the chromedriver.exe – version should be same as the chrome already installed from this link - https://chromedriver.chromium.org/ - choose for windows
Create new workspace
Go to Help Menu -> Eclipse Market Place ==> Install TestNG in Eclipse.

Create Maven Project with simple archetype ==> org.apache.architype group - maven-archetype-simple

Create a folder in project call Drivers and copy the chormedriver.exe in it.
Update pom.xml file with the required dependencies and plugins like selenium and testNG and compiler
https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java


Create package under src/test/java
Create Class under this package 
And all the test script as shown 
Run as testNG



package seleniumpkg1;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.Test;
public class Testloginpage {

	@Test
	public void login() {
		System.setProperty("webdriver.chrome.driver", "./webdrivers/chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("http://1.2.3.8:8080/login?from=%2F");
		WebElement username=driver.findElement(By.id("j_username"));
		WebElement password=driver.findElement(By.name("j_password"));
		WebElement login=driver.findElement(By.name("Submit"));
		username.sendKeys("Loksai");
		password.sendKeys("lokafdasdfsdfsdsai");
		login.click();
		String actualUrl="http://1.2.2.185.8:8080/";
		String expectedUrl= driver.getCurrentUrl();
		Assert.assertEquals(expectedUrl,actualUrl);
	}
}


Create a Selenium WebDriver instance
Configure browser if required
Navigate to the required web page
Locate the relevant web element
Perform action on the web element
Verify and validate the action


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>seleniumprojects</groupId>
  <artifactId>seleniumdemo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>seleniumdemo</name>
  <description>seleniumdemo</description>
 
  <dependencies>	  
		  <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <version>4.10.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
		    <groupId>org.testng</groupId>
		    <artifactId>testng</artifactId>
		    <version>7.8.0</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <version>2.0.7</version>
		    <scope>test</scope>
		</dependency>
  </dependencies>

<build>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
           	<artifactId>maven-compiler-plugin</artifactId>
           	<version>3.6.1</version>
           	<configuration>
           		<source>1.8</source>
           		<target>1.8</target>
           	</configuration>
  		</plugin>
  		
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
           	<artifactId>maven-surefire-plugin</artifactId>
           	<version>2.20</version>
           	<configuration>
           	 	<suiteXmlFiles>
           			<suiteXmlFile>testng.xml</suiteXmlFile>
           			<!-- <suiteXmlFile>src/main/resources/testng.xml</suiteXmlFile> -->
           		</suiteXmlFiles>
           	</configuration>
  		</plugin>
  	</plugins>  
  </build> 
   
  
</project>


#################
29th August 2023
#################	

		OOP ==> Object Oriented Programming! 
		
			Java Code Coverage(JaCoCo) :::
				
			Class 
			Object 
			

		Funtamentals of Python 
		
			Install of Python
			
			Create Python Console Application.
			Create Python Web Application.
			
			
			Scripting Languages ::: shell/python_script/groovy/yaml for DevOps.
			
			Install of Python :::
			
				Visual Studio Code IDE
			
				Python scripts ===> 
				
					Eclipse IDE --> for Java based application ::
					
					Desktop
					Mobile 
					Web Application 
					
				IDE --> PyCharm IDE 
					-->	Visual Studio Code IDE 
							Install Python Extension
							
				Tools --> Install Python 
							IDLE - Utility to work with python.
							https://www.python.org/downloads/			
		
		
				a[5] ==> {4,5,6,7,8}
				
				a[1] ==> 5
				a[3] ==> 7


#################
31st August 2023
#################	

			Python Web Application Development :::
			
			Web Application Framework :: 
			_flask_

			Web Application :::
				Front_End 
				Back_End
				Application_Logic
				
			IDEs - Pycharm -
			IDLE - Command Line Interface 
			Eclipse IDE -- Java application 
			
			Create Web Application Development using Python:
			
*************************************	
		Pre-requisites 
			
			
		Python scripts ===> 
		
			Eclipse IDE --> for Java based application ::
			
			Desktop
			Mobile 
			Web Application 
			
		IDE --> PyCharm IDE 
			-->	Visual Studio Code IDE 
					Install Python Extension
					
		Tools --> Install Python 
					IDLE - Utility to work with python.
					https://www.python.org/downloads/
					
		Python :::
		
			Web Application Framework
				- Django
				- Flask

	Open Visual Studio Code 
	Create Project Folder :
	
	Open New Terminal :
		
		
		Install : 	Web Application Framework
			pip install flask
	
		Create app.py 

from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')

def sample():
	return render_template("sample.html")

if "__name__" == "__main__":
	app.run(debug=True)



		Create "templates" folder at root level :::
				Create Html files :: eg. sample.html 
				
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>www.loksaieta.com</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>
<body>
  <div class="jumbotron" style="background-color:white">
	  <img src="https://octodex.github.com/images/spidertocat.png" alt="Spidertocat"
		   class="img-responsive center-block" style="width:250px"/>
	  <h2 class="text-center">Hello Everyone</h2>
	  <p class="text-center"> SA 11 - Python Demo...</p>
  </div>
</body>
</html>	

		set FLASK_APP=sample
	
		python -m flask run	


#################
31st August 2023
#################

		Structured Query Language - SQL 
		
		
		Database
		Data 
		Database Management System ?
		Relational DBMS ?
		
		Data vs Information 
		
		Data Manage/Handling ???
		
		Variable ???
		
			"Hello"	==> 5 characters - 1Byte(8bits) ==> stored in a memory location!
			
			Variable ==> called as Identifier 

				int a = 5;
			
			Group of Data are managed by Array Variables
			
			File system --> Sequential / Indexed 
			
			Batch Application 
					(vs)
			Online Application 
			
			Database Management System:
			
			Data are stored in the form of Database :
			
			Database is a collection of Tables 
			
			In Table, the data are stored in the form of Rows & Columns
			
		Employee_DataBase:
		
			Employee_Base_Table
			Employee_Project_Details
			Employee_Salary
	
			Employee_Base_Table:
			
				Emp_ID		Emp_Name	Emp_Email		Emp_Addr	Emp_Mobile_No	Emp_DOB			Emp_DOJ		Dept
				E1001		xyz			xyz@abc.com		asdfasdf	1231231231		12/12/1997		12/1/2052	EMP 
				E1002		xyz			xyzz@abc.com	asdfasdf	1231251231		12/1/1997		12/1/1997	HR
				E1003		hgfh876878	xyz2			asdfasdf	1jhjg61231		12/1/1997		12/1/1997	FIN		
			
			Data Integrity:::::
			
			Constraints ::	Conditions
			
			Unique 
			Not-Null
			Check
			Primary-Key Constraint ==> (both Unique & Non-Null Constraints)
			Default 
			Index 
			
			Emp_ID,Email_Id,Mobile_No -- Unique 
			
			
			Employee_Base_Table:
			
				Emp_ID		Emp_Name	Emp_Email		Emp_Addr	Emp_Mobile_No	Emp_DOB			Emp_DOJ		Dept
				E1001		xyz			xyz@abc.com		asdfasdf	1231231231		12/12/1997		12/1/2052	EMP 
				E1002		xyz			xyzz@abc.com	asdfasdf	1231251231		12/1/1997		12/1/1997	HR
				E1003		hgfh876878	xyz2			asdfasdf	1jhjg61231		12/1/1997		12/1/1997	FIN						

			Employee_Salary:
			
				Emp_ID		Emp_Name	Basic_pay		HRA			Gross_Pay		Net_Pay			Accn_No	
				E1001		xyz			10000			0			0				0				adfasdfasdf123123
				E1010		asdfasdf	123123			23123		12312312		82342347686		868713231212			

			Employee_Project_Details:

				Proj_Name	Dept		Emp_Name		Emp_ID		Start_Date		End_Date		Manager_ID		
				adfasdfs	IT			xyz				E1001		sfasdf			asdfasdf		sdfasdfasdfsdfsdfsdf
				
			
			Referential Integrity Constraint :::
			
				Before Insert/Update the record into child tables we need to confirm the record exist in parent table. 
				Before Delete the record from parent table, we need to confirm the record does not exist in any child table.
			
				
			
			How to create the Database Objects ::
			
			We need Database Engine : Oracle/MySQL/ 
				Structured Query Language - SQL 		to work in RDBMS 
				
			SQL :::
			
			DDL - Data Definition Language 
					Create,Alter,Rename,Drop,Trancate.........
			DML - Data Manipulation Language
					Insert,Update,Delete,Select
			DCL - Data Control Langage
					Grant,Revoke,.... 
			TCL	- Transaction Control Language 
					Commit,RollBack,....
					
								
